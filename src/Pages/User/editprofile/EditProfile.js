import React, { useState, useEffect } from "react";
import { Clock } from 'lucide-react';
import Navbar from "../../../components/common/navbar/navbar";
import "./edit_profile.css";

const EditProfile = () => {
    const [date, setDate] = useState("");
    const [time, setTime] = useState("");
    const [formData, setFormData] = useState({
        name: "",
        division: "",
        department: "",
        job: "",
        phone: "",
        email: "",
        profilePic: null
    });
    const [previewUrl, setPreviewUrl] = useState(null);
    const [message, setMessage] = useState({ type: '', text: '' });

    useEffect(() => {
        const updateDateTime = () => {
            const now = new Date();

            // Format date: DD/MM/YYYY
            const formattedDate = now.toLocaleDateString('th-TH', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric'
            });

            // Format time: HH:MM:SS
            const formattedTime = now.toLocaleTimeString('th-TH', {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: false
            });

            setDate(formattedDate);
            setTime(formattedTime);
        };

        updateDateTime();
        const timer = setInterval(updateDateTime, 1000);

        return () => clearInterval(timer);
    }, []);

    const handleInputChange = (e) => {
        const { id, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [id]: value
        }));
    };

    const handleImageChange = (e) => {
        const file = e.target.files[0];
        if (file) {
            if (file.size > 5 * 1024 * 1024) { // 5MB limit
                setMessage({
                    type: 'error',
                    text: '‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô 5MB'
                });
                return;
            }

            if (!file.type.startsWith('image/')) {
                setMessage({
                    type: 'error',
                    text: '‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏û‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô'
                });
                return;
            }

            setFormData(prev => ({
                ...prev,
                profilePic: file
            }));

            const reader = new FileReader();
            reader.onloadend = () => {
                setPreviewUrl(reader.result);
            };
            reader.readAsDataURL(file);
        }
    };

    const handleSubmit = async (e) => {
        e.preventDefault();

        try {
            // Here you would typically make an API call to update the profile
            // For now, we'll simulate a successful update
            await new Promise(resolve => setTimeout(resolve, 1000));

            setMessage({
                type: 'success',
                text: '‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à'
            });

            // Redirect after successful update
            setTimeout(() => {
                window.location.href = "/dashboard";
            }, 2000);
        } catch (error) {
            setMessage({
                type: 'error',
                text: '‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏û‡πÄ‡∏î‡∏ó‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á'
            });
        }
    };

    return (
        <div className="edit-profile-container">
            <video className="background-video" autoPlay loop muted playsInline>
                <source src="‡∏û‡∏∑‡πâ‡∏ô‡∏´‡∏•‡∏±‡∏á2.mp4" type="video/mp4" />
                Your browser does not support the video tag.
            </video>

            <header className="header">
                <div className="title">
                    <img src="/logo.png" alt="SAT Logo" className="logo" />
                    <div className="title-text">
                        <h1>SPORTS AUTHORITY OF THAILAND</h1>
                        <div className="sub-title">Computer Equipment Management System</div>
                    </div>
                </div>
                <div className="datetime">
                    <div className="date">{date}</div>
                    <div className="time">
                        <Clock className="clock-icon" size={18} />
                        {time}
                    </div>
                </div>
            </header>

            <Navbar />

            <main className="content">
                <div className="form-container">
                    <h2>‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</h2>

                    {message.text && (
                        <div className={`message ${message.type}`}>
                            {message.text}
                        </div>
                    )}

                    <div className="profile-image-container">
                        <div className="profile-image">
                            {previewUrl ? (
                                <img src={previewUrl} alt="Profile Preview" />
                            ) : (
                                <div className="profile-placeholder">
                                    <span>üì∑</span>
                                </div>
                            )}
                        </div>
                        <div className="image-upload">
                            <label htmlFor="profile-pic" className="upload-button">
                                ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå
                            </label>
                            <input
                                type="file"
                                id="profile-pic"
                                accept="image/*"
                                onChange={handleImageChange}
                                className="hidden-input"
                            />
                        </div>
                        <p className="image-requirements">
                            ‡∏Ç‡∏ô‡∏≤‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î: 5MB | ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö: JPG, PNG
                        </p>
                    </div>

                    <form onSubmit={handleSubmit}>
                        <div className="form-group">
                            <label htmlFor="name">‡∏ä‡∏∑‡πà‡∏≠ - ‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•:</label>
                            <input
                                type="text"
                                id="name"
                                value={formData.name}
                                onChange={handleInputChange}
                                placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
                                required
                            />
                        </div>

                        <div className="form-group">
                            <label htmlFor="division">‡∏ù‡πà‡∏≤‡∏¢/‡∏™‡∏≥‡∏ô‡∏±‡∏Å:</label>
                            <select
                                id="division"
                                value={formData.division}
                                onChange={handleInputChange}
                                required
                            >
                                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ù‡πà‡∏≤‡∏¢/‡∏™‡∏≥‡∏ô‡∏±‡∏Å</option>
                                <option value="center1">‡∏ù‡πà‡∏≤‡∏¢‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£</option>
                                <option value="center2">‡∏ù‡πà‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô</option>
                                <option value="center3">‡∏ù‡πà‡∏≤‡∏¢‡πÄ‡∏ó‡∏Ñ‡πÇ‡∏ô‡πÇ‡∏•‡∏¢‡∏µ‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®</option>
                                <option value="center4">‡∏ù‡πà‡∏≤‡∏¢‡∏ó‡∏£‡∏±‡∏û‡∏¢‡∏≤‡∏Å‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</option>
                            </select>
                        </div>

                        <div className="form-group">
                            <label htmlFor="department">‡∏Å‡∏≠‡∏á:</label>
                            <select
                                id="department"
                                value={formData.department}
                                onChange={handleInputChange}
                                required
                            >
                                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Å‡∏≠‡∏á</option>
                                <option value="department1">‡∏Å‡∏≠‡∏á‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ</option>
                                <option value="department2">‡∏Å‡∏≠‡∏á‡∏Ñ‡∏•‡∏±‡∏á</option>
                                <option value="department3">‡∏Å‡∏≠‡∏á‡∏™‡∏≤‡∏£‡∏™‡∏ô‡πÄ‡∏ó‡∏®</option>
                                <option value="department4">‡∏Å‡∏≠‡∏á‡∏ö‡∏∏‡∏Ñ‡∏•‡∏≤‡∏Å‡∏£</option>
                            </select>
                        </div>

                        <div className="form-group">
                            <label htmlFor="job">‡∏á‡∏≤‡∏ô:</label>
                            <select
                                id="job"
                                value={formData.job}
                                onChange={handleInputChange}
                                required
                            >
                                <option value="">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏á‡∏≤‡∏ô</option>
                                <option value="job1">‡∏á‡∏≤‡∏ô‡∏ò‡∏∏‡∏£‡∏Å‡∏≤‡∏£</option>
                                <option value="job2">‡∏á‡∏≤‡∏ô‡∏û‡∏±‡∏™‡∏î‡∏∏</option>
                                <option value="job3">‡∏á‡∏≤‡∏ô‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏£‡∏∞‡∏ö‡∏ö</option>
                                <option value="job4">‡∏á‡∏≤‡∏ô‡∏ö‡∏£‡∏¥‡∏´‡∏≤‡∏£‡∏ö‡∏∏‡∏Ñ‡∏Ñ‡∏•</option>
                            </select>
                        </div>

                        <div className="form-group">
                            <label htmlFor="phone">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏†‡∏≤‡∏¢‡πÉ‡∏ô:</label>
                            <input
                                type="tel"
                                id="phone"
                                value={formData.phone}
                                onChange={handleInputChange}
                                placeholder="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏†‡∏≤‡∏¢‡πÉ‡∏ô"
                                pattern="[0-9]{4}"
                                title="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ 4 ‡∏´‡∏•‡∏±‡∏Å"
                                required
                            />
                        </div>

                        <div className="form-group">
                            <label htmlFor="email">E-mail:</label>
                            <input
                                type="email"
                                id="email"
                                value={formData.email}
                                onChange={handleInputChange}
                                placeholder="example@sat.or.th"
                                pattern=".+@sat\.or\.th"
                                title="‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏• @sat.or.th ‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô"
                                required
                            />
                        </div>

                        <div className="buttons">
                            <a href="/dashboard" className="back-button">‡∏¢‡πâ‡∏≠‡∏ô‡∏Å‡∏•‡∏±‡∏ö</a>
                            <button type="submit" className="submit-button">‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å</button>
                        </div>
                    </form>
                </div>
            </main>
        </div>
    );
};

export default EditProfile;